# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-05-23 01:15
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import user_service.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('firstName', models.CharField(blank=True, max_length=30, null=True, verbose_name='first name')),
                ('lastName', models.CharField(blank=True, max_length=30, null=True, verbose_name='last name')),
                ('userId', models.CharField(max_length=30, unique=True, verbose_name='user name')),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number format: '+999999999'. Max 15# allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('profileIds', models.TextField(blank=True, null=True)),
                ('activeProfileId', models.CharField(blank=True, max_length=32, null=True)),
                ('locationIds', models.TextField(blank=True, null=True)),
                ('activeLocationId', models.CharField(blank=True, max_length=32, null=True)),
                ('applicationIds', models.TextField(blank=True, null=True)),
                ('roles', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('dateJoined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', user_service.managers.UserManager()),
            ],
        ),
    ]
