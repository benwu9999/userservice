# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-08-12 19:58
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_unixdatetimefield.fields
import user_app.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number format: '+999999999'. Max 15# allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('active_profile_id', models.CharField(blank=True, max_length=200, null=True)),
                ('active_provider_profile_id', models.CharField(blank=True, max_length=200, null=True)),
                ('active_location_id', models.CharField(blank=True, max_length=200, null=True)),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('created', django_unixdatetimefield.fields.UnixDateTimeField()),
                ('modified', django_unixdatetimefield.fields.UnixDateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', user_app.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationId',
            fields=[
                ('created', django_unixdatetimefield.fields.UnixDateTimeField(auto_now=True)),
                ('application_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_application_id',
            },
        ),
        migrations.CreateModel(
            name='JobPostId',
            fields=[
                ('created', django_unixdatetimefield.fields.UnixDateTimeField(auto_now=True)),
                ('job_post_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_job_post_id',
            },
        ),
        migrations.CreateModel(
            name='LocationId',
            fields=[
                ('created', django_unixdatetimefield.fields.UnixDateTimeField(auto_now=True)),
                ('location_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_location_id',
            },
        ),
        migrations.CreateModel(
            name='ProfileId',
            fields=[
                ('created', django_unixdatetimefield.fields.UnixDateTimeField(auto_now=True)),
                ('profile_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profile_id',
            },
        ),
        migrations.CreateModel(
            name='ProviderProfileId',
            fields=[
                ('created', django_unixdatetimefield.fields.UnixDateTimeField(auto_now=True)),
                ('provider_profile_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_provider_profile_id',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_unixdatetimefield.fields.UnixDateTimeField(auto_now=True)),
                ('role', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_role',
            },
        ),
    ]
